{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","Addnote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","onChange","event","target","value","length","trim","NotesList","notes","AddNote","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","class","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10bb7311.chunk.js","sourcesContent":["import {MdDeleteForever} from 'react-icons/md';\r\n\r\nconst Note = ({ id, text, date , handleDeleteNote}) => {\r\n    return(\r\n        <div className=\"note\">\r\n            <span>{text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever onClick={()=> handleDeleteNote(id)} className=\"delete-icon\" size=\"1.3em\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import {useState} from \"react\";\r\n\r\nconst Addnote = ({handleAddNote}) => {\r\n    const [noteText, setNoteText] = useState('');\r\n    const charLimit = 200;\r\n\r\n    const handleChange = (event) => {\r\n        if(charLimit - event.target.value.length>=0)\r\n        {\r\n            setNoteText(event.target.value);\r\n        }\r\n        };\r\n\r\n    const handleClick =  () => {\r\n        if(noteText.trim().length>0)\r\n        {\r\n            handleAddNote(noteText);\r\n            setNoteText('');\r\n        }\r\n        };\r\n\r\n    return(\r\n        <div className=\"note new\">\r\n            <textarea rows=\"8\" cols=\"10\" placeholder=\"Type to add a note...\" onChange={handleChange} value={noteText}></textarea>\r\n            <div className=\"note-footer\">\r\n                <small>{charLimit - noteText.length} Remaining</small>\r\n                <button className=\"save\" onClick={handleClick}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addnote;","import Note from \"./Note\";\r\nimport AddNote from \"./AddNote\";\r\nconst NotesList = ({ notes , handleAddNote , handleDeleteNote }) => {\r\n    return(\r\n        <div className=\"notes-list\">\r\n            <AddNote handleAddNote={handleAddNote} />\r\n            {notes.map((note) => (\r\n            <Note id={note.id} text={note.text} date={note.date} handleDeleteNote={handleDeleteNote} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList;","import React from 'react';\r\nimport {MdSearch} from 'react-icons/md';\r\n\r\nconst Search = ({handleSearchNote}) =>{\r\n    return (\r\n    <div className=\"search\">\r\n        <MdSearch className=\"search-icons\" size='1.3em' />\r\n        <input onChange={(event)=>handleSearchNote(event.target.value)} type='text' placeholder='type to search...' />\r\n    </div>\r\n\r\n    )}\r\n   \r\nexport default Search;    ","import React from 'react';\r\n\r\nconst Header = ({handleToggleDarkMode}) => {\r\n    return(\r\n        <div class=\"header\">\r\n            <h1>Notes</h1>\r\n            <button onClick={()=> handleToggleDarkMode((previousDarkMode) => !previousDarkMode)} className=\"save\" >Toggle Mode</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useState , useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from './components/Search'\nimport Header from './components/Header';\n\nfunction App() {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"this is my first note \",\n      date: \"15/04/2021\",\n    },\n\n    {\n      id: nanoid(),\n      text: \"this is my second note \",\n      date: \"15/04/2021\",\n    },\n\n    {\n      id: nanoid(),\n      text: \"this is my third note \",\n      date: \"15/04/2021\",\n    },\n\n    {\n      id: nanoid(),\n      text: \"this is my fourth note \",\n      date: \"15/04/2021\",\n    }\n\n  ]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  }\n\n  const [searchText, setSearchText] = useState('');\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('workflowy'));\n\n    if(savedNotes)\n    {\n      setNotes(savedNotes);\n    }\n\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('workflowy', JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))} handleAddNote={addNote} handleDeleteNote={deleteNote} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}